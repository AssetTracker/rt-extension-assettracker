%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%#  
%# This software is Copyright (c) 1996-2004 Best Practical Solutions, LLC 
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<%perl>
 if ($ShowDisplayModes or $ShowTitle) {
my $title;
my $titleright;
if ($ShowTitle) {
    $title = loc('History');
    if ($MaxRows > 0) {
       $title .= loc(' (last [_1])', $MaxRows);
    }
}
else {
    $title = '&nbsp;';
}
$titleright = loc('Display mode') . ":";
if ($ShowHeaders) {
    $titleright .= "[<A HREF=\"" . $URIFile . "?id="
      . $Asset->id . "\">"
      . loc("Brief headers")
      . "</a>] <b>["
      . loc("Full headers") . "]</b>";
}
else {
    $titleright .= "<b>["
      . loc("Brief headers")
      . "]</b> [<A HREF=\""
      . $URIFile
      . "?ShowHeaders=1"
      . "&id="
      . $Asset->id . "\">"
      . loc("Full headers") . "</a>]";
}
</%perl>
<& /Elements/TitleBoxStart, title => $title, titleright => $titleright, bodyclass=> ''&>
% }

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=2 BORDER=0>
<%perl>
my @attachments = @{$Attachments->ItemsArrayRef()};
my @attachment_content = @{$AttachmentContent->ItemsArrayRef()};





while ( my $Transaction = $Transactions->Next ) {
    my $skip = 0;
    $m->comp( '/Elements/Callback',
              _CallbackName => 'SkipTransaction',
              Transaction   => $Transaction,
              skip          => \$skip,
              %ARGS );
    next if $skip;
    $i++;

    my @trans_attachments = grep { $_->TransactionId == $Transaction->Id } @attachments;

    my $trans_content = {};
    grep { ($_->TransactionId == $Transaction->Id ) && ($trans_content->{$_->Id} = $_)  } @attachment_content;

   
    #Args is first because we're clobbering the "Attachments" parameter 
    $m->comp( 'ShowTransaction',
            %ARGS,

	      AttachPath	  => $AttachPath,
	      UpdatePath	   => $UpdatePath,
              Asset               => $Asset,
              Transaction          => $Transaction,
              ShowHeaders          => $ShowHeaders,
              Collapsed            => $Collapsed,
              RowNum               => $i,
              ShowTitleBarCommands => $ShowTitleBarCommands,
              Attachments          => \@trans_attachments,
              AttachmentContent    => $trans_content,
              LastTransaction      => $Transactions->IsLast
 );

# manually flush the content buffer after each txn, so the user sees
# some update
$m->flush_buffer(); 
}

</%perl>
</TABLE>
% if ($ShowDisplayModes or $ShowTitle) {
<& /Elements/TitleBoxEnd &>
% }
<%INIT>
my $Transactions = new RTx::AssetTracker::Transactions($session{'CurrentUser'});
if ($Assets) {
    while (my $t = $Assets->Next) {
	$Transactions->LimitToAsset($t->id);
    }
} else {
    $Transactions = $Asset->Transactions;
}

$Transactions->OrderByCols (
                { FIELD => 'Created',   ORDER => 'DESC' },
                { FIELD => 'id',     ORDER => 'DESC' } );

my $i;

if ($MaxRows) {
    $Transactions->RowsPerPage($MaxRows) if $MaxRows > 0;
    $Transactions->OrderBy(FIELD => "id", ORDER => "DESC");
}

$Attachments ||=  $m->comp('/AssetTracker/Asset/Elements/FindAttachments', Asset => $Asset, Assets => $Assets || undef);
$AttachmentContent ||= $m->comp('/AssetTracker/Asset/Elements/LoadTextAttachments', Asset => $Asset);

</%INIT>
<%ARGS>
$URIFile => $RT::WebPath."/AssetTracker/Asset/Display.html"
$Asset => undef
$Assets => undef
$Attachments => undef
$AttachmentContent => undef
$ShowHeaders => undef
$Collapsed => undef
$ShowTitle => 1
$ShowDisplayModes => 1
$ShowTitleBarCommands => 1
$MaxRows => undef
$AttachPath => $RT::WebPath."/AssetTracker/Asset/Attachment"
$UpdatePath => $RT::WebPath."/AssetTracker/Asset/Update.html"

</%ARGS>
