%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%#  
%# This software is Copyright (c) 1996-2004 Best Practical Solutions, LLC 
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<%INIT>
my %documents;

#A default implementation here loops through all transactions and pulls out all their attachments.
# We end up doing an end-run around that to get a bit more performance

# We force the cache of asset transactions to get populated up front. otherwise, the 
# code that looks at attachments will look at each one in turn.
my $attachments = RT::Attachments->new( $session{'CurrentUser'} );

$attachments->Columns( qw( Id Filename ContentType Headers Subject Parent ContentEncoding ContentType TransactionId Created));

my $transactions = $attachments->NewAlias('Transactions');
$attachments->Join( ALIAS1 => 'main',
		    FIELD1 => 'TransactionId',
		    ALIAS2 => $transactions,
		    FIELD2 => 'id' );
    
my $assets = $attachments->NewAlias('AT_Assets');

  $attachments->Join( ALIAS1 => $transactions,                         
                        FIELD1 => 'ObjectId',
                        ALIAS2 => $assets,
                        FIELD2 => 'id' );
    
    $attachments->Limit( ALIAS => $transactions,
                         FIELD => 'ObjectType',
                        VALUE => 'RTx::AssetTracker::Asset');
if ($Assets) {
    while ($Asset = $Assets->Next) {
	$attachments->Limit( ALIAS => $assets,
			     FIELD => 'Id',
			     VALUE => $Asset->id() );
    }
} else {
    $attachments->Limit( ALIAS => $assets,
			 FIELD => 'Id',
			 VALUE => $Asset->id() );
}


return ($attachments);
</%INIT>
<%ARGS>
$Asset => undef
$Assets => undef
</%ARGS>

