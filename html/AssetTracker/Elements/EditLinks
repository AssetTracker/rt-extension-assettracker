%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2012 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<table width="100%">
  <tr>
    <td valign="top" width="50%">
      <h3><&|/l&>Current Links</&></h3>

<table>
%foreach my $type ( keys %{RT->Config->Get('AssetLinkTypes')} ) {
% my $base = $RT::Link::DIRMAP{$type}->{'Base'};
% my $target = $RT::Link::DIRMAP{$type}->{'Target'};
  <tr>
    <td class="labeltop"><& ShowRelationLabel, uri => $Object->URI, Label => loc(RT::Record->FormatType( Type => $base )), Relation => $base &>:</td>
    <td class="value">
% while (my $link = $Object->$base->Next) {
      <input type="checkbox" class="checkbox" name="DeleteLink--<%$link->Type%>-<%$link->Target%>" value="1" />
        <& /Elements/ShowLink, URI => $link->TargetURI &><br />
% }
    </td>
  </tr>
  <tr>
    <td class="labeltop"><& ShowRelationLabel, uri => $Object->URI, Label => loc(RT::Record->FormatType( Type => $target )), Relation => $target &>:</td>
    <td class="value">
% while (my $link = $Object->$target->Next) {
      <input type="checkbox" class="checkbox" name="DeleteLink-<%$link->Base%>-<%$link->Type%>-" value="1" />
        <& /Elements/ShowLink, URI => $link->BaseURI &><br />
% }
    </td>
  </tr>
%}
  <tr>
    <td></td>
    <td><i><&|/l&>(Check box to delete)</&></i></td>
  </tr>
</table>

</td>
<td valign="top">
<h3><&|/l&>New Links</&></h3>
% if (ref($Object) eq 'RTx::AssetTracker::Asset') {
<i><&|/l&>Enter URIs to link assets to. Separate multiple entries with spaces.</&>
% $m->callback( CallbackName => 'ExtraLinkInstructions' );
</i><br />
% } elsif (ref($Object) eq 'RTx::AssetTracker::Type') {
<i><&|/l&>Enter asset types or URIs to link asset types to. Separate multiple entries with spaces.</&>
</i><br />
% } else {
<i><&|/l&>Enter objects or URIs to link objects to. Separate multiple entries with spaces.</&></i><br />
% }
<table>
%foreach my $type ( keys %{RT->Config->Get('AssetLinkTypes')} ) {
% my $base = $RT::Link::DIRMAP{$type}->{'Base'};
% my $target = $RT::Link::DIRMAP{$type}->{'Target'};
  <tr>
    <td class="label"><& ShowRelationLabel, uri => $Object->URI, Label => loc(RT::Record->FormatType( Type => $base )), Relation => $base &>:</td>
    <td class="entry"><input name="<%$id%>-<% $type %>" /></td>
  </tr>
  <tr>
    <td class="label"><& ShowRelationLabel, uri => $Object->URI, Label => loc(RT::Record->FormatType( Type => $target )), Relation => $target &>:</td>
    <td class="entry"><input name="<% $type %>-<%$id%>" /></td>
  </tr>
%}
% $m->callback( CallbackName => 'NewLink' );
</table>
</td>
</tr>
</table>

<%INIT>
my $id;
if ($Object && $Object->Id) {
    $id = $Object->Id;
} else {
    $id = 'new';
}
</%INIT>

<%ARGS>
$Object => undef
</%ARGS>
