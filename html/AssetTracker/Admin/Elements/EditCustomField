%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%#  
%# This software is Copyright (c) 1996-2004 Best Practical Solutions, LLC 
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<& /Elements/ListActions, actions => \@results &>


<FORM METHOD=POST ACTION="CustomField.html">
<INPUT TYPE=HIDDEN NAME="CustomField" VALUE="<%$id %>">
<INPUT TYPE=HIDDEN name="Type" value="<%$AssetType%>">

<TABLE WIDTH="100%" BORDER="0">
<TR><TD ALIGN="RIGHT">
<&|/l&>Name</&>:
</TD><TD>
<input name="Name" VALUE="<%$CustomFieldObj->Name%>" SIZE=20>
</TD></TR>
<TR><TD ALIGN="RIGHT">
<&|/l&>Description</&>:
</TD><TD>
<input name="Description" VALUE="<%$CustomFieldObj->Description%>" SIZE=80>
</TD></TR>
<TR><TD ALIGN="RIGHT">
<&|/l&>Type</&>:
</TD><TD>
<& /Admin/Elements/SelectCustomFieldType, Name => "Type", Default => $CustomFieldObj->Type &>
</TD></TR>
<TR><TD>
</TD><TD>
<INPUT TYPE=HIDDEN NAME="SetEnabled" VALUE="1">
<INPUT TYPE=CHECKBOX NAME="Enabled" VALUE="1" <%$EnabledChecked%>> <&|/l&>Enabled (Unchecking this box disables this custom field)</&>
</TD></TR>
</TABLE>

<P>
% if ($CustomFieldObj->Id and $CustomFieldObj->Type =~ /Select/) {
<h2><&|/l&>Values</&></h2>
<font size=-1>
<& /Admin/Elements/EditCustomFieldValues, CustomField => $CustomFieldObj &>
<& /Admin/Elements/AddCustomFieldValue, CustomField => $CustomFieldObj &>
</font>
% }
<&/Elements/Submit, Label => loc('Create') &>
</FORM>



<%INIT>

my $CustomFieldObj = RT::CustomField->new($session{'CurrentUser'});
my $EnabledChecked = "CHECKED";
my (@results);

if (! $CustomField ) { 
  $title = loc("Create a CustomField");
  $id = 'new';
} else {

    if ($CustomField eq 'new') {
      my ($val, $msg) =  $CustomFieldObj->Create(Type => $AssetType, 
                                                 Name => $Name, 
                                                 Type => $Type,
                                                 Description => $Description,
						 );
      
      # if there is an error, then abort.  But since at this point there's
      # stuff already printed, clear it out.
      # (This only works in conjunction with temporarily turning autoflush
      #  off in the files that use this component.)
      unless ($val) {
	  $m->clear_buffer;
	  Abort(loc("Could not create CustomField: [_1]", $msg));
      }
      push @results, $msg;
      $CustomFieldObj->SetSortOrder($CustomFieldObj->id);
      $title = loc('Created CustomField [_1]', $CustomFieldObj->Name()); 
    } else {
      $CustomFieldObj->Load($CustomField) || Abort(loc('No CustomField'));
      $title = loc('Editing CustomField [_1]', $CustomFieldObj->Name()); 

      my @aresults = ProcessCustomFieldUpdates ( 
                        CustomFieldObj => $CustomFieldObj,
                        ARGSRef => \%ARGS );
      push @results, @aresults;
    }


$id = $CustomFieldObj->id;

  #we're asking about enabled on the web page but really care about disabled.
  my $Disabled = ($Enabled ? 0 : 1);

  if  ( ($SetEnabled) and ( $Disabled != $CustomFieldObj->Disabled) ) { 
      my  ($code, $msg) = $CustomFieldObj->SetDisabled($Disabled);
      push @results, loc('Enabled status [_1]', loc_fuzzy($msg));
  }
  
  if ($CustomFieldObj->Disabled()) {
      $EnabledChecked ="";
  }

}


</%INIT>
<%ARGS>
$id => undef
$title => undef
$AssetType => undef
$CustomField => undef
$Type => undef
$Description => undef
$Name => undef
$SetEnabled => undef
$Enabled => undef
</%ARGS>
